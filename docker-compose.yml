services:
  postgres:
    image: postgres:15
    container_name: pluginmarket-db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: pluginmarket-backend
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgres://postgres:Jq0pu6T6LCP0JdIeofDoLA1G1@postgres:5432/marketplace"
      JWT_SECRET: ${JWT_SECRET}
      SMTP_ENABLED: ${SMTP_ENABLED}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_ADDRESS: ${SMTP_FROM_ADDRESS}
      SMTP_FROM_NAME: ${SMTP_FROM_NAME}
      SERVER_HOST: "0.0.0.0"
      SERVER_PORT: "3000"
      STORAGE_UPLOAD_PATH: "/app/uploads"
      RUST_LOG: "info"
    ports:
      - "${API_PORT}:3000"
    volumes:
      - ./uploads:/app/uploads:rw
      - ./server/config:/app/config:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  proxy:
    image: python:3.11-slim
    container_name: pluginmarket-proxy
    working_dir: /app
    command: ["python3", "proxy_server.py"]
    env_file:
      - .env
    environment:
      BACKEND_URL: ${BACKEND_URL}
    ports:
      - "${PROXY_PORT}:8080"
    volumes:
      - ./proxy_server.py:/app/proxy_server.py:ro
      - ./index.html:/app/index.html:ro
      - ./admin.html:/app/admin.html:ro
      - ./admin.js:/app/admin.js:ro
      - ./test-admin.html:/app/test-admin.html:ro
      - ./test-frontend.html:/app/test-frontend.html:ro
      - ./test.html:/app/test.html:ro
      - ./upload-test.html:/app/upload-test.html:ro
      - ./proxy-test.html:/app/proxy-test.html:ro
      - ./uploads:/app/uploads:ro
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
